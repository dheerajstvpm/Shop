<div class="container minHeight">

    <div class="d-flex justify-content-between border-bottom my-3">
        <h3 class="text-danger">{{msg}}</h3>
        <h1>Order summary</h1>
    </div>
    {{#if cartEmpty}}
    <h3 class="text-danger">Items in your cart are out of stock</h3>
    {{else}}
    <div class="d-flex mb-3">
        <table class=" table">
            <thead>
                <tr>
                    <th scope="col" class="text-center">Sl.</th>
                    <th scope="col" class="text-center">Product Name</th>
                    <th scope="col" class="text-center">Price</th>
                    <th scope="col" class="text-center">No.of items</th>
                    <th scope="col" class="text-center">Total</th>
                </tr>
            </thead>
            <tbody>
                {{#each result.cart}}
                <tr>
                    <th scope="row" class="text-center">{{addOne @index}}.</th>
                    <td class="text-center">{{this.productName}}</td>
                    <td class="text-center">&#x20B9;{{this.price}}</td>
                    <td class="text-center"><a href="/removeFromCart/{{this._id}}"
                            class="ms-1 me-4 text-decoration-none text-dark"
                            onclick="return confirm('Are you sure, you want to remove product :{{this.productName}} from the cart?')"><svg
                                xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                class="bi bi-dash-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" />
                            </svg></a>{{this.count}}<a href="/addToCart/{{this._id}}"
                            class="ms-4 text-decoration-none text-dark"><svg xmlns="http://www.w3.org/2000/svg"
                                width="16" height="16" fill="currentColor" class="bi bi-plus-circle"
                                viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                                <path
                                    d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                            </svg></a></td>
                    <td class="text-center">{{multiply this.price this.count}}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>


    <form id="rzp-form">

        <div class="row my-3 d-flex justify-content-end">
            <div class="d-flex justify-content-end mt-5">
                <h1>Total payment : &#x20B9;{{total}}</h1>
            </div>
            <input type="number" name="amount" value="{{total}}" class="d-none">
            <input type="text" name="currency" value="INR" class="d-none">
            <div class="d-flex justify-content-end mt-3">
                <div class="">
                    <div class="d-flex justify-content-end">
                        <textarea name="newAddress" id="newAddress" placeholder="Add new address" class="text-end"
                            cols="20" rows="3"></textarea>
                        {{#each result.address}}
                        <div class="form-check form-check-reverse ms-3 border">
                            <input class="form-check-input" type="radio" name="address" id="exampleRadios1"
                                value="{{this}}" checked>
                            <label class="form-check-label" style="width:180px" for="exampleRadios1">
                                {{this}}
                            </label>
                        </div>
                        {{/each}}

                    </div>
                    <div class="d-flex justify-content-end mt-3">                        
                        <div class="d-flex justify-content-end">
                            <label for="offer" class="col-md-5 col-form-label">Select payment option :</label>
                            <select name="paymentOption" id="paymentOption" style="width: 250px;">
                                <option selected disabled>Select one</option>
                                <option value="COD">COD</option>
                                <option value="Paypal">Paypal</option>
                                <option value="Razorpay">Razorpay</option>
                            </select>
                        </div>
                    </div>

                </div>
            </div>
            <div class="d-flex justify-content-end my-3">
                <button type="submit" id="rzp-button" class="btn btn-dark">Continue</button>
            </div>
        </div>


    </form>
    {{/if}}

    <!-- Set up a container element for the button -->
    <div class="d-flex justify-content-end mt-3">
        <div id="paypal-button-container" class="col-md-4"></div>
    </div>

    <!-- Replace "test" with your own sandbox Business account app client ID -->
    <script
        src="https://www.paypal.com/sdk/js?client-id=ASKeh3WF4s3YQ9QymJrj0XiOQpaIm3o-R9Pa8UHPt3Ogr_6mbzLMkrV_r6Hi5BQnc6v7WGxBEA5xnxho&currency=USD"></script>


    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>

        async function f() {
            const form = document.querySelector("#rzp-form")
            console.log(form)
            const amount = form.amount.value
            const currency = form.currency.value
            const newAddress = form.newAddress.value
            const address = form.address.value
            const paymentOption = form.paymentOption.value

            let order = await fetch('/buyNow', {
                method: 'POST', // or 'PUT'
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ amount, currency, newAddress, address, paymentOption }),
            })
            order = await order.json()
            console.log(order)

            if (order.success) {
                window.location.href = "/order";
            } else if (order.id === 'addAddressError') {
                window.location.href = "/buyNow";
            } else if (order.id === 'Paypal') {
                paypal.Buttons({
                    // Order is created on the server and the order id is returned
                    createOrder: (data, actions) => {
                        return fetch('/paymentPaypal', {
                            method: "post",
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ amount, currency, address, paymentOption }),
                            // use the "body" param to optionally pass additional order information
                            // like product ids or amount
                        })
                            .then((response) => response.json())
                            .then((order) => order.id);
                    },
                    // Finalize the transaction on the server after payer approval
                    onApprove: (data, actions) => {
                        return fetch(`/verifyPaymentPaypal/${data.orderID}/capture`, {
                            method: "post",
                        })
                            .then((response) => response.json())
                            .then((orderData) => {
                                // Successful capture! For dev/demo purposes:
                                console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));

                                const transaction = orderData.purchase_units[0].payments.captures[0];
                                //alert(`Transaction ${transaction.status}: ${transaction.id}\n\nSee console for all available details`);
                                // When ready to go live, remove the alert and show a success message within this page. For example:
                                // const element = document.getElementById('paypal-button-container');
                                // element.innerHTML = '<h3>Thank you for your payment!</h3>';
                                // Or go to another URL:  actions.redirect('thank_you.html');
                                async function g() {
                                    if (transaction.id) {
                                        const saveRes = await fetch('/saveOrder', {
                                            method: 'GET', // or 'PUT'
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                        })

                                        console.log(saveRes + "saveRes")
                                        if (saveRes) {
                                            window.location.href = "/order";
                                        }
                                    }
                                }
                                g();
                            });
                    }
                }).render('#paypal-button-container');
            } else if (order.id) {

                console.log(order)

                const options = {
                    "key": "rzp_test_VdJI59WlbDKQw7", // Enter the Key ID generated from the Dashboard
                    "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                    "currency": "INR",
                    "name": "Shop. Corp",
                    "description": "Test Transaction",
                    "image": "https://example.com/your_logo",
                    "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
                    "handler": async function (response) {
                        console.log(response)
                        const res = await fetch('/verifyPaymentRazorPay', {
                            method: 'POST', // or 'PUT'
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(response),
                        })
                        console.log(res + "res")

                        if (res) {
                            const saveRes = await fetch('/saveOrder', {
                                method: 'GET', // or 'PUT'
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                            })

                            console.log(saveRes + "saveRes")
                            if (saveRes) {
                                window.location.href = "/order";
                            }
                        }
                    },
                    "prefill": {
                        "name": "Gaurav Kumar",
                        "email": "gaurav.kumar@example.com",
                        "contact": "9999999999"
                    },
                    "notes": {
                        "address": "Razorpay Corporate Office"
                    },
                    "theme": {
                        "color": "#3399cc"
                    }
                };

                const rzp1 = new Razorpay(options);
                rzp1.on('payment.failed', function (response) {
                    alert(response.error.code);
                    alert(response.error.description);
                    alert(response.error.source);
                    alert(response.error.step);
                    alert(response.error.reason);
                    alert(response.error.metadata.order_id);
                    alert(response.error.metadata.payment_id);
                });
                rzp1.open();
            }
        }
        document.getElementById('rzp-button').onclick = function (e) {
            f()
            e.preventDefault();
        }

    </script>
</div>